#ifndef STATUSCODES_H
#define STATUSCODES_H

#include <string>

// Explanation of status codes:
// https://httpwg.org/specs/rfc9110.html#overview.of.status.codes

enum statusCode{
	// Information responses
	CONTINUE = 100,
	SWITCHING_PROTOCOLS = 101, //Only important for UPGRADE request
	PROCESSING = 102,
	EARLY_HINTS = 103,

	// Successful responses
	OK_HTTP = 200,
	CREATED = 201,
	ACCEPTED = 202,
	NON_AUTHORITATIVE_INFORMATION = 203,
	NO_CONTENT = 204,
	RESET_CONTENT = 205,
	PARTIAL_CONTENT = 206,

	// Redirection messages
	MULTIPLE_CHOICES = 300,
	MOVED_PERMANENTLY = 301,
	FOUND = 302,
	SEE_OTHER = 303,
	NOT_MODIFIED = 304,
	TEMPORARY_REDIRECT = 307,
	PERMANENT_REDIRECT = 308,

	// Client error responses
	BAD_REQUEST = 400,
	UNAUTHORIZED = 401,
	FORBIDDEN = 403,
	NOT_FOUND = 404,
	METHOD_NOT_ALLOWED = 405,
	NOT_ACCEPTABLE = 406,
	PROXY_AUTHENTIFICATION_REQUIRED = 407,
	REQUEST_TIMEOUT = 408,
	CONFILCT = 409,
	GONE = 410,
	LENGTH_REQUIRED = 411,
	PRECONDITION_FAILED = 412,
	PAYLOAD_TO_LARGE = 413,
	URI_TOO_LONG = 414,
	UNSUPPORTED_MEDIA_TYPE = 415,
	RANGE_NOT_SATISFIABLE = 416,
	EXPECTATION_FAILED = 417,
	IM_A_TEAPOT = 418,
	MISDIRECTED_REQUEST = 421,
	UNPROCESSABLE_CONTENT = 422,
	UPGRADE_REQUIRED = 426,

	// Server error responses
	INTERNAL_SERVER_ERROR = 500,
	NOT_IMPLEMENTED = 501,
	BAD_GATEWAY = 502,
	SERVICE_UNAVAILABLE = 503,
	GATEWAY_TIMEOUT = 504,
	HTTP_VERSION_NOT_SUPPORTED = 505
};

std::string getStatusCodeMessage(statusCode code);
std::string getStatusCodeDescription(statusCode code);

#endif